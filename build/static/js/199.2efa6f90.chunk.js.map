{"version":3,"file":"static/js/199.2efa6f90.chunk.js","mappings":"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","sources":["content/ProgrammsContent.jsx","components/pages/Programms.jsx","../node_modules/@chakra-ui/layout/src/grid.tsx","../node_modules/@chakra-ui/layout/src/simple-grid.tsx","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/layout/src/stack/stack-divider.tsx","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx"],"sourcesContent":["import seminar from \"../assets/img/integralseminar.png\";\nimport korotich from \"../assets/img/korot.jpg\";\nimport nogikids from \"../assets/img/no gi kids.jpg\";\nimport gikids from \"../assets/img/gikids.jpg\";\nexport const ProgrammsInfo = [\n  {\n    title: \"Формат Гі\",\n    description:\n      \"Тренування у форматі Гі - являють собою один із двох основних форматів тренувань у Бразилському джіу-джитсу. Особливістю цього формату є те, що практикуючі займаються в Гі (кімоно), що надає більший спектр контролю опонента, а також відрізняється у техніках, які є, наприклад, у форматі Ноу - Гі.\",\n    features: [\n      \"Більша кількість хватів, задушливих та контролю.\",\n      \"Адаптації та зміцнення хвату.\",\n      \"Концентрація на техніці, оскільки Гі створює необхідні умови для контролю.\",\n      \"Вивчення стратегії використання Гі у боротьбі.\",\n      \"Гі підсилює важливість тиску та контролю в BJJ.\",\n      \"Адаптація технік в Гі/Но-Гі та ключові відмінності.\",\n    ],\n    imageUrl: gikids,\n  },\n  {\n    title: \"Формат Но-Гі\",\n    description:\n      \"Тренування бразильського джиу-джитсу без традиційного Гі може принести багато переваг. Тренування без гі стає все більш популярним серед практикуючих, і тут ми досліджуємо деякі переваги відмови від гі в обмін на рашгарди та шорти.\",\n    features: [\n      \"Без Gi греплери рухаються швидше та мають більшу свободу рухів. \",\n      \"Тренування без Гі – чудовий спосіб стати сильнішим.\",\n      \"Но-Гі – це вправи з більшою інтенсивністю.\",\n      \"Однією з головних переваг може бути кардіовитривалість.\",\n      \"Чудовий спосіб освоїти інстинктивні реакції на незнайомі сценарії.\",\n      \"Посилення уваги до основ сабмішн-боротьби.\",\n    ],\n    imageUrl: nogikids,\n  },\n  {\n    title: \"Drill сесії\",\n    description:\n      \"Drill сесії - особливо корисно для розвитку груп м’язів, які використовуються в BJJ, особливо для стегон. Рух стегна є вирішальним у BJJ, оскільки він дозволяє практикуючим генерувати силу та виконувати такі техніки, як підйоми та подання. Однак багатьом учням BJJ важко навчитися правильно рухати стегнами, що робить Drill сесії важливим інструментом для вдосконалення.\",\n    features: [\n      \"Повторюючи техніку  - знову і знову, розвивається м’язова пам’ять.\",\n      \"Тренування вимагають дисципліни та зосередженості.\",\n      \"Сесії дозволяють   виявити та посилити свої слабкі сторони.\",\n      \"Можливість атакувати з обох боків дає змогу скористатися слабшою стороною.\",\n      \"Вправи спрямовані на вдосконалення рухів і мобільності практикуючого.\",\n      \"Допомагають практикуючому розвинути необхідні рефлекси.\",\n    ],\n    imageUrl:\n      \"https://evolve-mma.com/wp-content/uploads/2022/03/bjj-drills.jpg\",\n  },\n  {\n    title: \"День боротьби\",\n    description:\n      \"Практика є ключовим аспектом у тренуваннях та покращення своїх навичок, техніки та фізичної підготовки. Тому, наприкінці кожного тренування ми проводимо невеликі сесії боротьби з 5-6 раундів. Але окрім цього, щосуботи в нашій академії ми практикуємо день боротьби. Де все тренування присвячене циклічній боротьбі по колу.\",\n    features: [\n      \"Відточуєте свою техніку та покращуєте гру.\",\n      \"Тренуєте та покращуєте свою витривалість.\",\n      \"Маєте можливість поборотися із носіями різних стилів боротьби.\",\n      \"Маєте можливість відпрацювати всілякі ситуації та сценарії боротьби.\",\n      \"Зміцнюєте свої сильні сторони та опрацьовуєте слабкі.\",\n      \"Отримуєте необхідний досвід боротьби.\",\n    ],\n    imageUrl:\n      \"https://atosjiujitsuhq.com/wp-content/uploads/2022/06/open-mat.jpeg\",\n  },\n  {\n    title: \"Участь на семінарах та відкритих килимах\",\n    description:\n      \"Участь не є основним аспектом наших тренувань, проте наші практикуючі часто є гостями на подібних заходах. Так як це чудова можливість освоїти нові техніки, зміцнити свою, дізнатися щось нове, отримати безцінний досвід, а також стати частиною цього потужного ком'юніті.\",\n    features: [\n      \"Відмінна можливість здобути досвід за стінами нашої академії.\",\n      \"Нові знайомства, місця та атмосфера.\",\n      \"Можливість познайомитися з іншими методами навчання та викладання.\",\n      \"Ознайомлення з філософією інших академій.\",\n      \"Вивчення нових технік, вправ та концепцій.\",\n    ],\n    imageUrl: seminar,\n  },\n  {\n    title: \"Підготовка до змагань та турнірів.\",\n    description:\n      \"У стінах нашої академії ви зможете отримати потрібні знання, навички та досвід, які необхідні для перемоги на змаганнях. Практикуючі нашої академії мають високі показники на змаганнях та завжди показують відмінний результат.\",\n    features: [\n      \"Участь у змаганнях сприяє розвитку навичок джиу-джитсу.\",\n      \"Турніри надають цінний досвід бою під тиском.\",\n      \"Змагання дозволяють оцінити ваш поточний рівень майстерності.\",\n      \"Участь у турнірах вимагає суворої підготовки та самодисципліни.\",\n      \"Турніри надають відмінну можливість зустрітися з однодумцями.\",\n      \"Конкурентна складова змагань може зробити заняття джиу-джитсу більш захоплюючим.\",\n    ],\n    imageUrl: korotich,\n  },\n];\n","import Navbar from \"../navigation/Nav\";\nimport {\n  Box,\n  Container,\n  Stack,\n  Text,\n  Image,\n  Flex,\n  VStack,\n  Heading,\n  SimpleGrid,\n  StackDivider,\n  List,\n  ListItem,\n  ListIcon,\n} from \"@chakra-ui/react\";\nimport { ProgrammsInfo } from \"../../content/ProgrammsContent\";\nimport Elevator from \"../elem/Elevator\";\nimport { FcPlus } from \"react-icons/fc\";\nimport SmallCentered from \"../elem/Footer\";\nimport FlexContainer from \"../elem/FlexContainer\";\nconst Programms = () => {\n  return (\n    <>\n      <Navbar />\n      <Elevator />\n      <FlexContainer>\n        <Container maxW={\"7xl\"}>\n          {ProgrammsInfo.map((product, index) => (\n            <SimpleGrid\n              key={index}\n              columns={{ base: 1, lg: 1 }}\n              spacing={{ base: 2, md: 2 }}\n              py={{ base: 18, md: 6 }}\n            >\n              <Flex paddingTop={\"5%\"}>\n                <Image\n                loading=\"eager\"\n                  rounded={\"md\"}\n                  alt={\"product image\"}\n                  src={product.imageUrl}\n                  fit={\"cover\"}\n                  align={\"center\"}\n                  w={\"100%\"}\n                  h={{ base: \"100%\", sm: \"400px\", lg: \"500px\" }}\n                />\n              </Flex>\n              <Stack spacing={{ base: 6, md: 2 }}>\n                <Box as={\"header\"}>\n                  <Heading\n                    lineHeight={1.1}\n                    fontWeight={600}\n                    fontSize={{ base: \"2xl\", sm: \"4xl\", lg: \"4xl\" }}\n                    color={\"#3f48cc\"}\n                    p={2}\n                  >\n                    {product.title}\n                  </Heading>\n                </Box>\n                <Stack\n                  spacing={{ base: 4, sm: 6 }}\n                  direction={\"column\"}\n                  divider={\n                    <StackDivider borderColor={(\"gray.200\", \"gray.600\")} />\n                  }\n                >\n                  <VStack spacing={{ base: 4, sm: 6 }}>\n                    <Text fontSize={\"lg\"} p={2}>\n                      {product.description}\n                    </Text>\n                  </VStack>\n                  <Box>\n                    <Text\n                      fontSize={{ base: \"2xl\", sm: \"3xl\", lg: \"3xl\" }}\n                      color={\"#3f48cc\"}\n                      fontWeight={\"500\"}\n                      p={2}\n                    >\n                      Переваги\n                    </Text>\n                    <SimpleGrid columns={{ base: 1, md: 1, lg: 2 }} p={2}>\n                      {product.features.map((feature, featureIndex) => (\n                        <List key={featureIndex}>\n                          <ListItem\n                            display=\"flex\"\n                            alignItems=\"center\"\n                            borderBottom={{\n                              base: \"0.1px solid grey\",\n                              sm: \"0.1px solid grey\",\n                              md: \"none\",\n                              lg: \"none\",\n                            }}\n                          >\n                            <ListIcon as={FcPlus} color=\"#3f48cc\" mr={1} />\n                            {feature}\n                          </ListItem>\n                        </List>\n                      ))}\n                    </SimpleGrid>\n                  </Box>\n                  <Box></Box>\n                </Stack>\n              </Stack>\n            </SimpleGrid>\n          ))}\n        </Container>\n      </FlexContainer>\n      <SmallCentered />\n    </>\n  );\n};\n\nexport default Programms;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { HTMLChakraProps, ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport interface StackDividerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StackDivider: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__divider\"\n    {...props}\n    __css={{\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\",\n    }}\n  />\n)\n\nStackDivider.displayName = \"StackDivider\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n"],"names":["ProgrammsInfo","title","description","features","imageUrl","nogikids","seminar","korotich","_jsxs","_Fragment","children","_jsx","Navbar","Elevator","FlexContainer","Container","maxW","map","product","index","SimpleGrid","columns","base","lg","spacing","md","py","Flex","paddingTop","Image","loading","rounded","alt","src","fit","align","w","h","sm","Stack","Box","as","Heading","lineHeight","fontWeight","fontSize","color","p","direction","divider","StackDivider","borderColor","VStack","Text","feature","featureIndex","List","ListItem","display","alignItems","borderBottom","ListIcon","FcPlus","mr","SmallCentered","Grid","forwardRef","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","_objectWithoutProperties","_excluded","styles","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","div","_objectSpread","__css","displayName","count","spacingX","spacingY","minChildWidth","theme","useTheme","width","mapResponsive","value","n","_value","getToken","concat","widthToColumns","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","validChildren","getValidChildren","spacingStyle","_defineProperty","mt","ul","listStyleType","listStylePosition","role","container","_excluded2","marginStart","_excluded3","li","item","Icon","icon","useStyleConfig","className","h2","cx","borderWidth","alignSelf","height"],"sourceRoot":""}