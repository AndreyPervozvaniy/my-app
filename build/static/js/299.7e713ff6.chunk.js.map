{"version":3,"file":"static/js/299.7e713ff6.chunk.js","mappings":"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","sources":["components/elem/FlexContainer.jsx","components/pages/NewsSlot.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction FlexContainer  ({ children, ...props }) {\n  return (\n    <Flex {...props} justifyContent={\"center\"} alignItems={\"center\"} >\n      {children}\n    </Flex>\n  );\n};\n \nexport default FlexContainer;\n","import React from \"react\";\nimport Navbar from \"../navigation/Nav\";\nimport { Box, Image, Button, Text } from \"@chakra-ui/react\";\nimport { useNewsSlotHooks } from \"../../hooks\";\nimport FlexContainer from \"../elem/FlexContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst NewsSlot = () => {\n  const {\n    router,\n    text,\n    img,\n    img2,\n    url,\n    isImageExpanded,\n    setIsImageExpanded,\n    showDownloadButton,\n    handleDownload,\n  } = useNewsSlotHooks();\n  return (\n    <>\n      <Navbar />{\" \"}\n      <FlexContainer h=\"100vh\" w=\"100%\">\n        <Box\n          w=\"90%\"\n          h=\"calc(100vh - 70px)\"\n          marginTop=\"70px\"\n          mb=\"20px\"\n          cursor=\"pointer\"\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <FlexContainer\n            borderRadius=\"15px\"\n            p=\"10px\"\n            mb=\"10px\"\n            cursor=\"pointer\"\n            flexDirection=\"column\"\n          >\n            <Image w=\"80%\" h=\"auto\" src={img}></Image>\n            <Text\n              fontSize=\"18px\"\n              padding=\"10px\"\n              backgroundColor=\"white\"\n              opacity=\"80%\"\n            >\n              {text}\n            </Text>\n            <Image\n              padding=\"10px\"\n              w={isImageExpanded ? \"110%\" : \"80%\"}\n              h=\"auto\"\n              src={img2}\n              onClick={() => setIsImageExpanded(!isImageExpanded)}\n            ></Image>\n            <Button\n              background=\"white\"\n              border=\"1px solid grey\"\n              borderRadius=\"20px\"\n              className=\"fa fa-arrow-left\"\n              padding=\"10px\"\n              marginBottom=\"20px\"\n              onClick={() => router(\"/news\")}\n            >\n              <Text padding=\"10px\">Повернутися</Text>\n            </Button>{\" \"}\n            {showDownloadButton && (\n              <Button\n                background=\"white\"\n                border=\"1px solid grey\"\n                borderRadius=\"20px\"\n                padding=\"10px\"\n                marginBottom=\"20px\"\n                onClick={handleDownload}\n              >\n                <Text padding=\"10px\">Завантажити результат</Text>\n              </Button>\n            )}\n            {showDownloadButton && (\n              <Link to={url} target=\"blank\">\n                <Button\n                  background=\"white\"\n                  border=\"1px solid grey\"\n                  borderRadius=\"20px\"\n                  padding=\"10px\"\n                  marginBottom=\"20px\"\n                >\n                  <Text padding=\"10px\">Відвідати подію</Text>\n                </Button>\n              </Link>\n            )}\n          </FlexContainer>{\" \"}\n        </Box>\n      </FlexContainer>\n    </>\n  );\n};\n\nexport default NewsSlot;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["_ref","children","props","_objectWithoutProperties","_excluded","_jsx","Flex","_objectSpread","justifyContent","alignItems","_useNewsSlotHooks","useNewsSlotHooks","router","text","img","img2","url","isImageExpanded","setIsImageExpanded","showDownloadButton","handleDownload","_jsxs","_Fragment","Navbar","FlexContainer","h","w","Box","marginTop","mb","cursor","flexDirection","borderRadius","p","Image","src","Text","fontSize","padding","backgroundColor","opacity","onClick","Button","background","border","className","marginBottom","Link","to","target","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","options","buf","native","rnds","random"],"sourceRoot":""}