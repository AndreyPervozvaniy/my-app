{"version":3,"file":"static/js/571.4771083b.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icons/src/Search2.tsx","components/pages/News.jsx","../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/src/icon.tsx","../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/src/create-icon.tsx"],"sourcesContent":["import { createIcon } from \"@chakra-ui/icon\"\n\nexport const Search2Icon = createIcon({\n  d: \"M23.414,20.591l-4.645-4.645a10.256,10.256,0,1,0-2.828,2.829l4.645,4.644a2.025,2.025,0,0,0,2.828,0A2,2,0,0,0,23.414,20.591ZM10.25,3.005A7.25,7.25,0,1,1,3,10.255,7.258,7.258,0,0,1,10.25,3.005Z\",\n  displayName: \"Search2Icon\",\n})\n","import React from \"react\";\nimport { Box, Flex, Text, Image, Button } from \"@chakra-ui/react\";\nimport { Search2Icon } from \"@chakra-ui/icons\";\nimport Navbar from \"../navigation/Nav\";\nimport { PATHS } from \"../../routes\";\nimport Elevator from \"../elem/Elevator\";\nimport SmallCentered from \"../elem/Footer\";\nimport { useNewsHooks } from \"../../hooks\";\nimport FlexContainer from \"../elem/FlexContainer\";\n\n\nfunction News() {\n  const { router, setPage, pagination, ourNews } = useNewsHooks();\n\n  return (\n    <>\n      <Navbar /> <Elevator />\n      <FlexContainer h=\"100vh\" w=\"100%\">\n        <Box w=\"full\" h=\"calc(100vh - 70px)\" marginTop=\"70px\">\n          {ourNews.map((item, index) => (\n            <FlexContainer\n              p=\"10px\"\n              mb=\"10px\"\n              flexDirection=\"column\"\n              key={index}\n            >\n              <Image\n                w=\"50%\"\n                cursor=\"pointer\"\n                rounded={\"md\"}\n                src={item.image}\n                onClick={() =>\n                  router(PATHS.NEWS_SLOT.replace(\":id\", `id=${item.id}`), {\n                    state: {\n                      text: item.text,\n                      img: item.image,\n                      img2: item.image2,\n                      url:item.url\n                    },\n                  })\n                }\n              ></Image>\n              <Text\n                textAlign=\"center\"\n                w=\"80%\"\n                overflow=\"hidden\"\n                whiteSpace=\"nowrap\"\n                textOverflow=\"ellipsis\"\n                backgroundColor=\"white\"\n                opacity=\"80%\"\n                padding=\"20px\"\n              >\n                {item.text}\n              </Text>\n              <Button\n                onClick={() =>\n                  router(PATHS.NEWS_SLOT.replace(\":id\", `id=${item.id}`), {\n                    state: {\n                      text: item.text,\n                      img: item.image,\n                      img2: item.image2,\n                    },\n                  })\n                }\n              >\n                <Text padding=\"5px\">Дізнатися більше</Text> <Search2Icon />\n              </Button>\n            </FlexContainer>\n          ))}\n          <FlexContainer padding=\"20px\">\n            <Flex justify=\"space-around\" w=\"30%\">\n              {pagination.map((item, index) => (\n                <Button\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  key={index}\n                  borderRadius=\"50%\"\n                  h=\"40px\"\n                  transition=\"all 0.5s ease\"\n                  w=\"40px\"\n                  cursor=\"pointer\"\n                  onClick={() => setPage(item)}\n                  _hover={{ bg: \"rgb(63, 72, 204)\", transform: \"scale(1.2)\" }}\n                >\n                  {item}\n                </Button>\n              ))}\n            </Flex>\n          </FlexContainer>{\" \"}\n          <SmallCentered />\n        </Box>{\" \"}\n      </FlexContainer>{\" \"}\n    </>\n  );\n}\n\nexport default News;\n","import {\n  chakra,\n  ChakraProps,\n  forwardRef,\n  SystemStyleObject,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst fallbackIcon = {\n  path: (\n    <g stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <path\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        d=\"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      />\n      <path\n        fill=\"currentColor\"\n        strokeLinecap=\"round\"\n        d=\"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      />\n      <circle fill=\"none\" strokeMiterlimit=\"10\" cx=\"12\" cy=\"12\" r=\"11.25\" />\n    </g>\n  ),\n  viewBox: \"0 0 24 24\",\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport interface IconProps\n  extends Omit<React.SVGAttributes<SVGElement>, keyof ChakraProps>,\n    ChakraProps {\n  orientation?: Orientation\n}\n\n/**\n * The Icon component renders as an svg element to help define your own custom components.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon#using-the-icon-component\n */\nexport const Icon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-icon\", className)\n  const customStyles = useStyleConfig(\"Icon\", props)\n\n  const styles: SystemStyleObject = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles,\n  }\n\n  const shared: any = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles,\n  }\n\n  const _viewBox = viewBox ?? fallbackIcon.viewBox\n\n  /**\n   * If you're using an icon library like `react-icons`.\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\n   */\n  if (element && typeof element !== \"string\") {\n    return <chakra.svg as={element} {...shared} {...rest} />\n  }\n\n  const _path = (children ?? fallbackIcon.path) as React.ReactNode\n\n  return (\n    <chakra.svg verticalAlign=\"middle\" viewBox={_viewBox} {...shared} {...rest}>\n      {_path}\n    </chakra.svg>\n  )\n})\n\nIcon.displayName = \"Icon\"\n\nexport default Icon\n","import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n"],"names":["Search2Icon","createIcon","d","displayName","_useNewsHooks","useNewsHooks","router","setPage","pagination","ourNews","_jsxs","_Fragment","children","_jsx","Navbar","Elevator","FlexContainer","h","w","Box","marginTop","map","item","index","p","mb","flexDirection","Image","cursor","rounded","src","image","onClick","PATHS","NEWS_SLOT","replace","concat","id","state","text","img","img2","image2","url","Text","textAlign","overflow","whiteSpace","textOverflow","backgroundColor","opacity","padding","Button","Flex","justify","justifyContent","alignItems","borderRadius","transition","_hover","bg","transform","SmallCentered","fallbackIcon","path","jsxs","stroke","strokeWidth","jsx","strokeLinecap","fill","strokeMiterlimit","cx","cy","r","viewBox","Icon","forwardRef","props","ref","element","as","_props$color","color","_props$focusable","focusable","className","__css","rest","_objectWithoutProperties","_excluded","_className","customStyles","useStyleConfig","shared","_objectSpread","display","lineHeight","flexShrink","_viewBox","chakra","svg","_path","verticalAlign","options","_options$viewBox","pathDefinition","_options$defaultProps","defaultProps","Children","toArray","Comp","length"],"sourceRoot":""}