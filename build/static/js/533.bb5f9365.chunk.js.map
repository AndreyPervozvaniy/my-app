{"version":3,"file":"static/js/533.bb5f9365.chunk.js","mappings":"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","sources":["components/elem/ButtonsTemplate.jsx","components/elem/HeadingTemplate.jsx","components/elem/InstructorsNumber.jsx","components/elem/SmallHeadingTemplate.jsx","components/pages/Contacts.jsx","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Stack,Button} from \"@chakra-ui/react\";\r\nimport { useContactsHooks } from \"../../hooks\";\r\n\r\nfunction ButtonStack({ buttons, ...props }) { const { handleButtonClick } = useContactsHooks();\r\n  return (\r\n    <Stack\r\n      spacing={{ base: 4, sm: 6 }}\r\n      direction={{ base: \"column\", sm: \"row\" }}\r\n      {...props}\r\n    \r\n      p={4}\r\n    >\r\n      {buttons.map((button, index) => (\r\n        <Button   \r\n        rounded=\"full\"\r\n        size=\"lg\"\r\n        fontWeight=\"normal\"\r\n        px={6}\r\n       key={index}\r\n  \r\n    onClick={() => {\r\n            if (button.id === \"telegram\") {\r\n              window.open(\"https://t.me/YamasakiAcademyDnipro\"  );\r\n            } else {\r\n              handleButtonClick(button.id); \r\n            }\r\n          }}\r\n   colorScheme={button.colorScheme || \"gray\"}\r\n          bgColor={button.bgColor || \"gray.100\"}\r\n        > \r\n        {button.label}\r\n      </Button>\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default ButtonStack;\r\n","import React from \"react\";\r\nimport { Heading, Text } from \"@chakra-ui/react\";\r\n\r\nfunction CustomHeading({\r\n  text,\r\n  text2,\r\n  headingFontSize,\r\n  textFontSize,\r\n  textFontWeight,\r\n  headingFontWeight,\r\n  color,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Heading\r\n      fontWeight={500}\r\n      fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"5xl\" }}\r\n      lineHeight={\"110%\"}\r\n      textAlign={\"center\"}\r\n      textTransform=\"uppercase\"\r\n      p={2}\r\n      {...props}\r\n    >\r\n      {text}\r\n      <br />\r\n      <Text\r\n        as={\"span\"}\r\n        color={color || \"#3f48cc\"}\r\n        fontSize={textFontSize || { base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\r\n        fontWeight={textFontWeight || 400}\r\n      >\r\n        {text2}\r\n      </Text>\r\n    </Heading>\r\n  );\r\n}\r\n\r\nexport default CustomHeading;\r\n"," \r\nimport {\r\n  Text,\r\n  Button,\r\n  \r\n  Stack,\r\n  Box,\r\n   \r\n  useColorModeValue,\r\n  HStack,\r\n  VStack,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n} from \"@chakra-ui/react\";import { FaPhone } from \"react-icons/fa\";\r\nimport SmallHeading from \"./SmallHeadingTemplate\";\r\nimport { InstructorsPhone } from \"../../utils\";\r\nimport { useCallPhoneNumber } from \"../../hooks\";\r\nfunction PriceWrapper({ children }) {\r\n    return (\r\n      <Box\r\n        mb={4}\r\n        shadow=\"base\"\r\n        borderWidth=\"1px\"\r\n        alignSelf={{ base: \"center\", lg: \"flex-start\" }}\r\n        borderColor={useColorModeValue(\"gray.200\", \"gray.500\")}\r\n        borderRadius={\"xl\"}\r\n      >\r\n        {children}\r\n      </Box>\r\n    );\r\n  }\r\nconst InstructorsNumbersTemplate = () => {\r\n    const callPhone = useCallPhoneNumber();\r\n  return (\r\n    <Box py={2} id=\"InstructorContact\">\r\n    <VStack spacing={2} textAlign=\"center\" p={2}>\r\n      <SmallHeading text={\" Контакти наших інструкторів\"} />\r\n    </VStack>\r\n    <Stack\r\n      direction={{ base: \"column\", md: \"column\", lg: \"row\" }}\r\n      textAlign=\"center\"\r\n      justify=\"center\"\r\n      spacing={{ base: 4, lg: 10 }}\r\n      py={10}\r\n      p={4}\r\n      flexWrap={\"wrap\"}\r\n    >\r\n      {InstructorsPhone.map((instructor, index) => (\r\n        <PriceWrapper key={index}>\r\n          <Box py={4} px={12}>\r\n            <Text fontWeight=\"500\" fontSize=\"xl\">\r\n              {instructor.category}\r\n            </Text>\r\n            <HStack justifyContent=\"center\">\r\n              <Text fontSize=\"xl \" fontWeight=\"600\">\r\n                {instructor.name}\r\n              </Text>\r\n            </HStack>\r\n          </Box>\r\n          <VStack bg={\"gray.50\"} py={4} borderBottomRadius={\"xl\"}>\r\n            <List spacing={3} textAlign=\"start\" px={12}>\r\n              <ListItem>\r\n                <ListIcon as={FaPhone} color=\"green.500\" mr={2} />\r\n                {instructor.phone}\r\n              </ListItem>\r\n            </List>\r\n            <Box w=\"80%\" pt={7}>\r\n              <Button\r\n                w=\"full\"\r\n                colorScheme=\"blue\"\r\n                variant=\"outline\"\r\n                onClick={() => callPhone(instructor.phone)}\r\n              >\r\n                Подзвонити\r\n              </Button>\r\n            </Box>\r\n          </VStack>\r\n        </PriceWrapper>\r\n      ))}\r\n    </Stack>\r\n  </Box>\r\n  );\r\n};\r\nexport default InstructorsNumbersTemplate;\r\n","import React from \"react\";\r\nimport { Stack, Heading, Text, Container } from \"@chakra-ui/react\";\r\nfunction SmallHeading({ text, text1, ...props }) {\r\n  return (\r\n    <Stack spacing={4} as={Container} maxW={\"full\"} textAlign={\"center\"}{...props}>\r\n      <Heading\r\n        fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"4xl\" }}\r\n        fontWeight={\"bold\"}\r\n        textTransform={\"uppercase\"}\r\n        \r\n      >\r\n        {text}\r\n      </Heading>\r\n      <Text color={\"gray.600\"} fontSize={{ base: \"sm\", sm: \"lg\" }}>\r\n        {text1}\r\n      </Text>\r\n    </Stack>\r\n  );\r\n}\r\nexport default SmallHeading;\r\n","import React from \"react\";\r\nimport Navbar from \"../navigation/Nav\";\r\n\r\nimport {\r\n  Text,\r\n  Button,\r\n  Link,\r\n  Container,\r\n  Stack,\r\n  Box,\r\n  Heading,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport Elevator from \"../elem/Elevator\";\r\n\r\nimport { buttons } from \"../../utils\";\r\nimport { ContainerData } from \"../../utils\";\r\n\r\nimport { SocialLinksContacts } from \"../../utils\";\r\nimport SmallCentered from \"../elem/Footer\";\r\n\r\nimport FlexContainer from \"../elem/FlexContainer\";\r\nimport CustomHeading from \"../elem/HeadingTemplate\";\r\nimport SmallHeading from \"../elem/SmallHeadingTemplate\";\r\nimport InstructorsNumbersTemplate from \"../elem/InstructorsNumber\";\r\nimport ButtonStack from \"../elem/ButtonsTemplate\";\r\n\r\nconst Card = ({ heading, description, icon, href }) => {\r\n  //---------------------------------------------- кнопки соцсетей-----------------------------------\r\n  return (\r\n    <Box\r\n      maxW={{ base: \"full\", md: \"275px\" }}\r\n      w={\"full\"}\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      p={5}\r\n    >\r\n      <Stack align={\"center\"} spacing={2}>\r\n        <FlexContainer\r\n          w={16}\r\n          h={16}\r\n          rounded={\"full\"}\r\n          bg={useColorModeValue(\"gray.100\", \"gray.700\")}\r\n        >\r\n          {icon}\r\n        </FlexContainer>\r\n        <Box mt={2} textAlign={\"center\"}>\r\n          <Heading size=\"md\">{heading}</Heading>\r\n          <Text mt={1} fontSize={\"sm\"}>\r\n            {description}\r\n          </Text>\r\n        </Box>\r\n        <Button variant={\"link\"} colorScheme={\"blue\"} size={\"sm\"}>\r\n          Приєднуйся\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nconst Contacts = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Elevator />\r\n      {/* =====================================окна с гугл картой и ютубом ================================*/}\r\n      <FlexContainer flexDir={\"column\"}>\r\n        {ContainerData.map((container, index) => (\r\n          <Container maxW={\"7xl\"} key={index} padding={2}>\r\n            <Stack\r\n              textAlign={{\r\n                base: \"center\",\r\n                sm: \"center\",\r\n                md: \"center\",\r\n                lg: \"left\",\r\n              }}\r\n              align={\"center\"}\r\n              justify=\"center\"\r\n              spacing={{ base: 8, md: 10 }}\r\n              py={{ base: 24, md: 28 }}\r\n              direction={{ base: \"column\", md: \"column\", lg: \"row\" }}\r\n            >\r\n              <Stack flex={1} spacing={{ base: 5, md: 10 }}>\r\n                {\" \"}\r\n                <CustomHeading\r\n                  text={container.headingText}\r\n                  text2={container.headingText1}\r\n                  lineHeight={1.1}\r\n                  fontWeight={600}\r\n                  textAlign={{\r\n                    base: \"center\",\r\n                    sm: \"center\",\r\n                    md: \"center\",\r\n                    lg: \"left\",\r\n                  }}\r\n                />\r\n                <Text color={\"black\"} padding={\"5px\"}>\r\n                  {container.street}\r\n                  <br />\r\n                  {container.locationInfo} <br />\r\n                  {container.bus}\r\n                  <br /> {container.trolley}\r\n                </Text>\r\n                <ButtonStack\r\n                  buttons={buttons}\r\n                  justifyContent={{\r\n                    base: \"center\",\r\n                    sm: \"center\",\r\n                    md: \"center\",\r\n                    lg: \"left\",\r\n                  }}\r\n                />\r\n              </Stack>\r\n              <FlexContainer flex={1} w={\"full\"} flexDir={\"column\"}>\r\n                <Box\r\n                  height={\"300px\"}\r\n                  rounded={\"2xl\"}\r\n                  boxShadow={\"2xl\"}\r\n                  width={\"full\"}\r\n                  overflow={\"hidden\"}\r\n                >\r\n                  <iframe\r\n                    src={container.mapEmbedURL}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    title=\"YouTube video player\"\r\n                    loading=\"lazy\"\r\n                    frameborder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                    allowfullscreen\r\n                  ></iframe>\r\n                </Box>{\" \"}\r\n              </FlexContainer>{\" \"}\r\n            </Stack>{\" \"}\r\n          </Container>\r\n        ))}\r\n\r\n        {/*============================= бокс с номерами ===================================== */}\r\n        <InstructorsNumbersTemplate />\r\n\r\n        {/*======================================= бокс с соцсетями====================================== */}\r\n        <Box p={4}>\r\n          <SmallHeading\r\n            id=\"Society\"\r\n            text={\"  Yamasaki у соцмережах!\"}\r\n            text1={\r\n              \"Слідкуйте за новинами та подіями життя нашої академії, також завжди раді новим людям у наших лавах! Підписуйся, питай, приєднуйся!\"\r\n            }\r\n          />\r\n\r\n          <Container maxW={\"full\"} mt={12} mb={12} p={4}>\r\n            <FlexContainer flexWrap=\"wrap\" gridGap={6} p={4}>\r\n              {SocialLinksContacts.map((link, index) => (\r\n                <Link href={link.href} isExternal key={index}>\r\n                  <Card\r\n                    heading={link.heading}\r\n                    icon={link.icon}\r\n                    description={link.description}\r\n                  />\r\n                </Link>\r\n              ))}\r\n            </FlexContainer>\r\n          </Container>\r\n        </Box>\r\n      </FlexContainer>\r\n      <SmallCentered />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n"],"names":["_ref","buttons","props","_objectWithoutProperties","_excluded","handleButtonClick","useContactsHooks","_jsx","Stack","_objectSpread","spacing","base","sm","direction","p","children","map","button","index","Button","rounded","size","fontWeight","px","onClick","id","window","open","colorScheme","bgColor","label","text","text2","textFontSize","headingFontSize","textFontWeight","color","headingFontWeight","_jsxs","Heading","fontSize","md","lineHeight","textAlign","textTransform","Text","as","PriceWrapper","Box","mb","shadow","borderWidth","alignSelf","lg","borderColor","useColorModeValue","borderRadius","callPhone","useCallPhoneNumber","py","VStack","SmallHeading","justify","flexWrap","InstructorsPhone","instructor","category","HStack","justifyContent","name","bg","borderBottomRadius","List","ListItem","ListIcon","FaPhone","mr","phone","w","pt","variant","text1","Container","maxW","Card","heading","description","icon","href","overflow","align","FlexContainer","h","mt","_Fragment","Navbar","Elevator","flexDir","ContainerData","container","padding","flex","CustomHeading","headingText","headingText1","street","locationInfo","bus","trolley","ButtonStack","height","boxShadow","width","src","mapEmbedURL","title","loading","frameborder","allow","allowfullscreen","InstructorsNumbersTemplate","gridGap","SocialLinksContacts","link","Link","isExternal","SmallCentered","_createContext","createContext","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","forwardRef","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","rest","validChildren","getValidChildren","spacingStyle","_defineProperty","jsx","value","chakra","ul","listStyleType","listStylePosition","role","__css","displayName","_excluded2","marginStart","_excluded3","li","item","Icon","useStyleConfig","className","h2","cx"],"sourceRoot":""}