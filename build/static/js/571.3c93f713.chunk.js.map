{"version":3,"file":"static/js/571.3c93f713.chunk.js","mappings":"8MAEaA,GAAcC,E,QAAAA,GAAW,CACpCC,EAAG,iMACHC,YAAa,gB,oECiGf,MA3FA,WACE,IAAAC,GAAuDC,EAAAA,EAAAA,MAA/CC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAAUJ,EAAVI,WAAYC,EAAOL,EAAPK,QAASC,EAAIN,EAAJM,KAE9C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAAG,KAACD,EAAAA,EAAAA,KAACE,EAAAA,EAAQ,KACpBL,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CAACC,EAAE,QAAQC,EAAE,OAAMN,SAAA,EAC/BF,EAAAA,EAAAA,MAACS,EAAAA,GAAG,CAACD,EAAE,OAAOD,EAAE,qBAAqBG,UAAU,OAAMR,SAAA,CAClDJ,EAAQa,KAAI,SAACC,EAAMC,GAAK,OACvBb,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CACZQ,EAAE,OACFC,GAAG,OACHC,cAAc,SAAQd,SAAA,EAGtBC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACJT,EAAE,MACFU,OAAO,UACPC,QAAS,KACTC,IAAKR,EAAKS,MACVC,QAAS,kBACP3B,EAAO4B,EAAAA,EAAMC,UAAUC,QAAQ,MAAM,MAADC,OAAQd,EAAKe,KAAO,CACtDC,MAAO,CACLC,KAAMjB,EAAKiB,KACXC,IAAKlB,EAAKS,MACVU,KAAMnB,EAAKoB,OACXC,IAAKrB,EAAKqB,MAEZ,KAGN9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CACHC,UAAU,SACV3B,EAAE,MACF4B,SAAS,SACTC,WAAW,SACXC,aAAa,WACbC,gBAAgB,QAChBC,QAAQ,MACRC,QAAQ,OAAMvC,SAEbU,EAAKiB,QAER7B,EAAAA,EAAAA,MAAC0C,EAAAA,EAAM,CACLC,WAAY,QACZrB,QAAS,kBACP3B,EAAO4B,EAAAA,EAAMC,UAAUC,QAAQ,MAAM,MAADC,OAAQd,EAAKe,KAAO,CACtDC,MAAO,CACLC,KAAMjB,EAAKiB,KACXC,IAAKlB,EAAKS,MACVU,KAAMnB,EAAKoB,SAEb,EACH9B,SAAA,EAEDC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CAACO,QAAQ,MAAKvC,SAAC,gGAAuB,KAACC,EAAAA,EAAAA,KAACd,EAAW,SA1CrDwB,EA4CS,KAElBV,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAACmC,QAAQ,OAAMvC,UAC3BC,EAAAA,EAAAA,KAACyC,EAAAA,EAAI,CAACC,QAAQ,eAAerC,EAAE,MAAKN,SACjCL,EAAWc,KAAI,SAACC,EAAMC,GAAK,OAC1BV,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLI,eAAe,SACfC,WAAW,SAEXC,OAAQ,OACRL,WAAY,QACZM,aAAa,MACb1C,EAAE,OACF2C,WAAW,gBACX1C,EAAE,OACFU,OAAO,UACPiC,MAAO,CACLC,MAAOrD,IAASa,EAAO,OAAS,SAElCU,QAAS,kBAAM1B,EAAQgB,EAAK,EAC5ByC,OAAQ,CAAEC,GAAI,oBAAqBpD,SAElCU,GAdIC,EAeE,QAGE,KACjBV,EAAAA,EAAAA,KAACoD,EAAAA,EAAa,OACT,OACQ,MAGvB,C,sMC1FMC,EAAe,CACnBC,MACEC,EAAAA,EAAAA,MAAC,KAAEC,OAAO,eAAeC,YAAY,MACnC1D,SAAA,EAAA2D,EAAAA,EAAAA,KAAC,QACCC,cAAc,QACdC,KAAK,OACLxE,EAAE,wDAEJsE,EAAAA,EAAAA,KAAC,QACCE,KAAK,eACLD,cAAc,QACdvE,EAAE,iEAEJsE,EAAAA,EAAAA,KAAC,UAAOE,KAAK,OAAOC,iBAAiB,KAAKC,GAAG,KAAKC,GAAG,KAAKC,EAAE,aAGhEC,QAAS,aAgBEC,GAAOC,EAAAA,EAAAA,IAA6B,SAACC,EAAOC,GACvD,IACMC,EAQFF,EARFG,GACAN,EAOEG,EAPFH,QAAAO,EAOEJ,EANFnB,MAAAA,OAAA,IAAAuB,EAAQ,eAAAA,EAAAC,EAMNL,EALFM,UAAAA,OAAA,IAAAD,GAAYA,EACZ1E,EAIEqE,EAJFrE,SACA4E,EAGEP,EAHFO,UACAC,EAEER,EAFFQ,MACGC,GAAAC,EAAAA,EAAAA,GACDV,EAAAW,GAEEC,GAAalB,EAAAA,EAAAA,IAAG,cAAea,GAC/BM,GAAeC,EAAAA,EAAAA,IAAe,OAAQd,GAatCe,EAAc,CAClBd,IAAAA,EACAK,UAAAA,EACAC,UAAWK,EACXJ,OAfIQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJ/E,EAAG,MACHD,EAAG,MACHiF,QAAS,eACTC,WAAY,MACZC,WAAY,EACZtC,MAAAA,GACG2B,GACAK,IAUCO,EAAW,MAAAvB,EAAAA,EAAWZ,EAAaY,QAMzC,GAAIK,GAA8B,kBAAZA,EACpB,OAAOZ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOC,KAAAN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAIb,GAAID,GAAaa,GAAYN,IAGlD,IAAMc,EAAS,MAAA5F,EAAAA,EAAYsD,EAAaC,KAExC,OACEI,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOC,KAAAN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAIQ,cAAc,SAAS3B,QAASuB,GAAcL,GAAYN,GAAA,IACnE9E,SAAA4F,IAGP,IAEAzB,EAAK7E,YAAc,OAEnB,I,UClEO,SAASF,EAAW0G,GACzB,IAAAC,EAKID,EAJF5B,QAAAA,OAAA,IAAA6B,EAAU,YAAAA,EACPC,EAGDF,EAHFzG,EACAC,EAEEwG,EAFFxG,YAAA2G,EAEEH,EADFI,aAAAA,OAAA,IAAAD,EAAe,CAAC,EAAAA,EAEZ1C,EAAO4C,EAAAA,SAASC,QAAQN,EAAQvC,MAEhC8C,GAAOjC,EAAAA,EAAAA,IAA6B,SAACC,EAAOC,GAAA,OAChDX,EAAAA,EAAAA,KAACQ,GAAAkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKf,IAAAA,EAAUJ,QAAAA,GAAsBgC,GAAkB7B,GAAA,IACrDrE,SAAAuD,EAAK+C,OAAS/C,GAAOI,EAAAA,EAAAA,KAAC,QAAKE,KAAK,eAAexE,EAAG2G,MAEtD,IAID,OAFAK,EAAK/G,YAAcA,EAEZ+G,CACT,C","sources":["../node_modules/@chakra-ui/icons/src/Search2.tsx","components/pages/News.jsx","../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/src/icon.tsx","../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/src/create-icon.tsx"],"sourcesContent":["import { createIcon } from \"@chakra-ui/icon\"\n\nexport const Search2Icon = createIcon({\n  d: \"M23.414,20.591l-4.645-4.645a10.256,10.256,0,1,0-2.828,2.829l4.645,4.644a2.025,2.025,0,0,0,2.828,0A2,2,0,0,0,23.414,20.591ZM10.25,3.005A7.25,7.25,0,1,1,3,10.255,7.258,7.258,0,0,1,10.25,3.005Z\",\n  displayName: \"Search2Icon\",\n})\n","import React from \"react\";\r\nimport { Box, Flex, Text, Image, Button } from \"@chakra-ui/react\";\r\nimport { Search2Icon } from \"@chakra-ui/icons\";\r\nimport Navbar from \"../navigation/Nav\";\r\nimport { PATHS } from \"../../routes\";\r\nimport Elevator from \"../elem/Elevator\";\r\nimport SmallCentered from \"../elem/Footer\";\r\nimport { useNewsHooks } from \"../../hooks\";\r\nimport FlexContainer from \"../elem/FlexContainer\";\r\n\r\nfunction News() {\r\n  const { router, setPage, pagination, ourNews, page } = useNewsHooks();\r\n\r\n  return (\r\n    <>\r\n      <Navbar /> <Elevator />\r\n      <FlexContainer h=\"100vh\" w=\"100%\">\r\n        <Box w=\"full\" h=\"calc(100vh - 70px)\" marginTop=\"70px\">\r\n          {ourNews.map((item, index) => (\r\n            <FlexContainer\r\n              p=\"10px\"\r\n              mb=\"10px\"\r\n              flexDirection=\"column\"\r\n              key={index}\r\n            >\r\n              <Image\r\n                w=\"50%\"\r\n                cursor=\"pointer\"\r\n                rounded={\"md\"}\r\n                src={item.image}\r\n                onClick={() =>\r\n                  router(PATHS.NEWS_SLOT.replace(\":id\", `id=${item.id}`), {\r\n                    state: {\r\n                      text: item.text,\r\n                      img: item.image,\r\n                      img2: item.image2,\r\n                      url: item.url,\r\n                    },\r\n                  })\r\n                }\r\n              ></Image>\r\n              <Text\r\n                textAlign=\"center\"\r\n                w=\"80%\"\r\n                overflow=\"hidden\"\r\n                whiteSpace=\"nowrap\"\r\n                textOverflow=\"ellipsis\"\r\n                backgroundColor=\"white\"\r\n                opacity=\"80%\"\r\n                padding=\"20px\"\r\n              >\r\n                {item.text}\r\n              </Text>\r\n              <Button\r\n                background={\"white\"}\r\n                onClick={() =>\r\n                  router(PATHS.NEWS_SLOT.replace(\":id\", `id=${item.id}`), {\r\n                    state: {\r\n                      text: item.text,\r\n                      img: item.image,\r\n                      img2: item.image2,\r\n                    },\r\n                  })\r\n                }\r\n              >\r\n                <Text padding=\"5px\">Дізнатися більше</Text> <Search2Icon />\r\n              </Button>\r\n            </FlexContainer>\r\n          ))}\r\n          <FlexContainer padding=\"20px\">\r\n            <Flex justify=\"space-around\" w=\"30%\">\r\n              {pagination.map((item, index) => (\r\n                <Button\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  key={index}\r\n                  border={\"none\"}\r\n                  background={\"white\"}\r\n                  borderRadius=\"50%\"\r\n                  h=\"40px\"\r\n                  transition=\"all 0.5s ease\"\r\n                  w=\"40px\"\r\n                  cursor=\"pointer\"\r\n                  style={{\r\n                    color: page === item ? \"gold\" : \"black\",\r\n                  }}\r\n                  onClick={() => setPage(item)}\r\n                  _hover={{ bg: \"rgb(63, 72, 204)\" }}\r\n                >\r\n                  {item}\r\n                </Button>\r\n              ))}\r\n            </Flex>\r\n          </FlexContainer>{\" \"}\r\n          <SmallCentered />\r\n        </Box>{\" \"}\r\n      </FlexContainer>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import {\n  chakra,\n  ChakraProps,\n  forwardRef,\n  SystemStyleObject,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst fallbackIcon = {\n  path: (\n    <g stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <path\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        d=\"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      />\n      <path\n        fill=\"currentColor\"\n        strokeLinecap=\"round\"\n        d=\"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      />\n      <circle fill=\"none\" strokeMiterlimit=\"10\" cx=\"12\" cy=\"12\" r=\"11.25\" />\n    </g>\n  ),\n  viewBox: \"0 0 24 24\",\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport interface IconProps\n  extends Omit<React.SVGAttributes<SVGElement>, keyof ChakraProps>,\n    ChakraProps {\n  orientation?: Orientation\n}\n\n/**\n * The Icon component renders as an svg element to help define your own custom components.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon#using-the-icon-component\n */\nexport const Icon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-icon\", className)\n  const customStyles = useStyleConfig(\"Icon\", props)\n\n  const styles: SystemStyleObject = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles,\n  }\n\n  const shared: any = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles,\n  }\n\n  const _viewBox = viewBox ?? fallbackIcon.viewBox\n\n  /**\n   * If you're using an icon library like `react-icons`.\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\n   */\n  if (element && typeof element !== \"string\") {\n    return <chakra.svg as={element} {...shared} {...rest} />\n  }\n\n  const _path = (children ?? fallbackIcon.path) as React.ReactNode\n\n  return (\n    <chakra.svg verticalAlign=\"middle\" viewBox={_viewBox} {...shared} {...rest}>\n      {_path}\n    </chakra.svg>\n  )\n})\n\nIcon.displayName = \"Icon\"\n\nexport default Icon\n","import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n"],"names":["Search2Icon","createIcon","d","displayName","_useNewsHooks","useNewsHooks","router","setPage","pagination","ourNews","page","_jsxs","_Fragment","children","_jsx","Navbar","Elevator","FlexContainer","h","w","Box","marginTop","map","item","index","p","mb","flexDirection","Image","cursor","rounded","src","image","onClick","PATHS","NEWS_SLOT","replace","concat","id","state","text","img","img2","image2","url","Text","textAlign","overflow","whiteSpace","textOverflow","backgroundColor","opacity","padding","Button","background","Flex","justify","justifyContent","alignItems","border","borderRadius","transition","style","color","_hover","bg","SmallCentered","fallbackIcon","path","jsxs","stroke","strokeWidth","jsx","strokeLinecap","fill","strokeMiterlimit","cx","cy","r","viewBox","Icon","forwardRef","props","ref","element","as","_props$color","_props$focusable","focusable","className","__css","rest","_objectWithoutProperties","_excluded","_className","customStyles","useStyleConfig","shared","_objectSpread","display","lineHeight","flexShrink","_viewBox","chakra","svg","_path","verticalAlign","options","_options$viewBox","pathDefinition","_options$defaultProps","defaultProps","Children","toArray","Comp","length"],"sourceRoot":""}