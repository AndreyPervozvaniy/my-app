{"version":3,"file":"static/js/316.a9c03022.chunk.js","mappings":"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","sources":["components/elem/ButtonsTemplate.jsx","components/elem/FlexContainer.jsx","components/elem/InstructorsNumber.jsx","components/elem/SmallHeadingTemplate.jsx","components/pages/Schedule.jsx","../node_modules/@chakra-ui/layout/src/grid.tsx","../node_modules/@chakra-ui/layout/src/simple-grid.tsx","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx"],"sourcesContent":["import React from \"react\";\nimport { Stack,Button} from \"@chakra-ui/react\";\nimport { useContactsHooks } from \"../../hooks\";\n\nfunction ButtonStack({ buttons, ...props }) { const { handleButtonClick } = useContactsHooks();\n  return (\n    <Stack\n      spacing={{ base: 4, sm: 6 }}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    \n      p={4}\n    >\n      {buttons.map((button, index) => (\n        <Button   \n        rounded=\"full\"\n        size=\"lg\"\n        fontWeight=\"normal\"\n        px={6}\n       key={index}\n  \n    onClick={() => {\n            if (button.id === \"telegram\") {\n              window.open(\"https://t.me/YamasakiAcademyDnipro\"  );\n            } else {\n              handleButtonClick(button.id); \n            }\n          }}\n   colorScheme={button.colorScheme || \"gray\"}\n          bgColor={button.bgColor || \"gray.100\"}\n        > \n        {button.label}\n      </Button>\n      ))}\n    </Stack>\n  );\n}\n\nexport default ButtonStack;\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction FlexContainer  ({ children, ...props }) {\n  return (\n    <Flex {...props} justifyContent={\"center\"} alignItems={\"center\"} >\n      {children}\n    </Flex>\n  );\n};\n \nexport default FlexContainer;\n"," \nimport {\n  Text,\n  Button,\n  \n  Stack,\n  Box,\n   \n  useColorModeValue,\n  HStack,\n  VStack,\n  List,\n  ListItem,\n  ListIcon,\n} from \"@chakra-ui/react\";import { FaPhone } from \"react-icons/fa\";\nimport SmallHeading from \"./SmallHeadingTemplate\";\nimport { InstructorsPhone } from \"../../utils\";\nimport { useCallPhoneNumber } from \"../../hooks\";\nfunction PriceWrapper({ children }) {\n    return (\n      <Box\n        mb={4}\n        shadow=\"base\"\n        borderWidth=\"1px\"\n        alignSelf={{ base: \"center\", lg: \"flex-start\" }}\n        borderColor={useColorModeValue(\"gray.200\", \"gray.500\")}\n        borderRadius={\"xl\"}\n      >\n        {children}\n      </Box>\n    );\n  }\nconst InstructorsNumbersTemplate = () => {\n    const callPhone = useCallPhoneNumber();\n  return (\n    <Box py={2} id=\"InstructorContact\">\n    <VStack spacing={2} textAlign=\"center\" p={2}>\n      <SmallHeading text={\" Контакти наших інструкторів\"} />\n    </VStack>\n    <Stack\n      direction={{ base: \"column\", md: \"column\", lg: \"row\" }}\n      textAlign=\"center\"\n      justify=\"center\"\n      spacing={{ base: 4, lg: 10 }}\n      py={10}\n      p={4}\n      flexWrap={\"wrap\"}\n    >\n      {InstructorsPhone.map((instructor, index) => (\n        <PriceWrapper key={index}>\n          <Box py={4} px={12}>\n            <Text fontWeight=\"500\" fontSize=\"xl\">\n              {instructor.category}\n            </Text>\n            <HStack justifyContent=\"center\">\n              <Text fontSize=\"xl \" fontWeight=\"600\">\n                {instructor.name}\n              </Text>\n            </HStack>\n          </Box>\n          <VStack bg={\"gray.50\"} py={4} borderBottomRadius={\"xl\"}>\n            <List spacing={3} textAlign=\"start\" px={12}>\n              <ListItem>\n                <ListIcon as={FaPhone} color=\"green.500\" mr={2} />\n                {instructor.phone}\n              </ListItem>\n            </List>\n            <Box w=\"80%\" pt={7}>\n              <Button\n                w=\"full\"\n                colorScheme=\"blue\"\n                variant=\"outline\"\n                onClick={() => callPhone(instructor.phone)}\n              >\n                Подзвонити\n              </Button>\n            </Box>\n          </VStack>\n        </PriceWrapper>\n      ))}\n    </Stack>\n  </Box>\n  );\n};\nexport default InstructorsNumbersTemplate;\n","import React from \"react\";\nimport { Stack, Heading, Text, Container } from \"@chakra-ui/react\";\nfunction SmallHeading({ text, text1, ...props }) {\n  return (\n    <Stack spacing={4} as={Container} maxW={\"full\"} textAlign={\"center\"}{...props}>\n      <Heading\n        fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"4xl\" }}\n        fontWeight={\"bold\"}\n        textTransform={\"uppercase\"}\n        \n      >\n        {text}\n      </Heading>\n      <Text color={\"gray.600\"} fontSize={{ base: \"sm\", sm: \"lg\" }}>\n        {text1}\n      </Text>\n    </Stack>\n  );\n}\nexport default SmallHeading;\n","import React from \"react\";\nimport Navbar from \"../navigation/Nav\";\nimport { Box, Container, SimpleGrid, Text  } from \"@chakra-ui/react\";\nimport { statData } from \"../../utils\";\nimport FlexContainer from \"../elem/FlexContainer\";\nimport Elevator from \"../elem/Elevator\";\nimport InstructorsNumbersTemplate from \"../elem/InstructorsNumber\";\nimport SmallCentered from \"../elem/Footer\";\nimport { buttonShedule } from \"../../utils\";\nimport SmallHeading from \"../elem/SmallHeadingTemplate\";\nimport ButtonStack from \"../elem/ButtonsTemplate\";\nconst Schedule = () => {  \n  return (\n    <>\n      <Navbar />\n      <Elevator/>\n      <FlexContainer   >\n        <Container maxW=\"7xl\" p={{ base: 5, md: 10 }} textAlign={\"center\"} flexdir={'column'}>\n          <SmallHeading text={\"Розклад наших класів\"} pt={{base:'15%', sm:'10%', md:'10%',lg:'5%'} }/>\n          <SimpleGrid\n            columns={{ base: 1, sm: 2, md: 2, lg: 3 }}\n            spacing={5}\n            mt={12}\n            mb={4}\n            p={4}\n          >\n            {statData.map((data) => (\n              <Box\n                key={data.id}\n                p={5}\n                boxShadow=\"md\"\n                rounded=\"lg\"\n                borderWidth={2}\n              >\n                <Text fontWeight=\"extrabold\" fontSize=\"x-large\">\n                  {data.score}\n                </Text>\n                <Text>{data.label}</Text>\n                <Text>{data.label2}</Text> <Text>{data.label3}</Text>\n              </Box>\n            ))}{\" \"}\n          </SimpleGrid> \n          <ButtonStack buttons={buttonShedule} label={buttonShedule}   justifyContent={{\n        base: \"center\",\n        sm: \"center\",\n        md: \"center\",\n        lg: \"center\",\n      }}  />\n     <InstructorsNumbersTemplate/>\n        </Container>  \n      </FlexContainer>   \n      <SmallCentered/>\n    </>\n  );\n};\nexport default Schedule;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n"],"names":["_ref","buttons","props","_objectWithoutProperties","_excluded","handleButtonClick","useContactsHooks","_jsx","Stack","_objectSpread","spacing","base","sm","direction","p","children","map","button","index","Button","rounded","size","fontWeight","px","onClick","id","window","open","colorScheme","bgColor","label","Flex","justifyContent","alignItems","PriceWrapper","Box","mb","shadow","borderWidth","alignSelf","lg","borderColor","useColorModeValue","borderRadius","callPhone","useCallPhoneNumber","_jsxs","py","VStack","textAlign","SmallHeading","text","md","justify","flexWrap","InstructorsPhone","instructor","Text","fontSize","category","HStack","name","bg","borderBottomRadius","List","ListItem","ListIcon","as","FaPhone","color","mr","phone","w","pt","variant","text1","Container","maxW","Heading","textTransform","_Fragment","Navbar","Elevator","FlexContainer","flexdir","SimpleGrid","columns","mt","statData","data","boxShadow","score","label2","label3","ButtonStack","buttonShedule","InstructorsNumbersTemplate","SmallCentered","Grid","forwardRef","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","div","__css","displayName","count","spacingX","spacingY","minChildWidth","theme","useTheme","width","mapResponsive","value","n","_value","getToken","concat","widthToColumns","_createContext","createContext","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","validChildren","getValidChildren","spacingStyle","_defineProperty","ul","listStyleType","listStylePosition","role","container","_excluded2","marginStart","_excluded3","li","item","Icon","icon","useStyleConfig","className","h2","cx","align"],"sourceRoot":""}