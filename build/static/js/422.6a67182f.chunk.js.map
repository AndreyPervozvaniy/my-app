{"version":3,"file":"static/js/422.6a67182f.chunk.js","mappings":"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","sources":["components/elem/HeadingTemplate.jsx","components/pages/OurAcademy.jsx","../node_modules/@chakra-ui/layout/src/grid.tsx","../node_modules/@chakra-ui/layout/src/simple-grid.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import React from \"react\";\nimport { Heading, Text } from \"@chakra-ui/react\";\n\nfunction CustomHeading({\n  text,\n  text2,\n  headingFontSize,\n  textFontSize,\n  textFontWeight,\n  headingFontWeight,\n  color,\n  ...props\n}) {\n  return (\n    <Heading\n      fontWeight={500}\n      fontSize={{ base: \"2xl\", sm: \"4xl\", md: \"5xl\" }}\n      lineHeight={\"110%\"}\n      textAlign={\"center\"}\n      textTransform=\"uppercase\"\n      p={2}\n      {...props}\n    >\n      {text}\n      <br />\n      <Text\n        as={\"span\"}\n        color={color || \"#3f48cc\"}\n        fontSize={textFontSize || { base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n        fontWeight={textFontWeight || 400}\n      >\n        {text2}\n      </Text>\n    </Heading>\n  );\n}\n\nexport default CustomHeading;\n","import React from \"react\";\nimport Navbar from \"../navigation/Nav\";\nimport {\n  Box,\n  Text,\n  Flex,\n  Heading,\n  Container,\n  Stack,\n  Icon,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport SmallCentered from \"../elem/Footer\";\nimport { testimonialsData } from \"../../utils\";\nimport Elevator from \"../elem/Elevator\";\nimport CustomHeading from \"../elem/HeadingTemplate\";\nimport { FcApproval } from \"react-icons/fc\";\nimport { AboutAcdemy } from \"../../utils\";\nconst OurAcademy = () => {\n  const Testimonial = (props) => {\n    const { children } = props;\n\n    return <Box>{children}</Box>;\n  };\n\n  const TestimonialContent = (props) => {\n    const { children } = props;\n\n    return (\n      <Stack\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        boxShadow={\"lg\"}\n        p={8}\n        rounded={\"xl\"}\n        align={\"center\"}\n        pos={\"relative\"}\n        _after={{\n          content: `\"\"`,\n          w: 0,\n          h: 0,\n          borderLeft: \"solid transparent\",\n          borderLeftWidth: 16,\n          borderRight: \"solid transparent\",\n          borderRightWidth: 16,\n          borderTop: \"solid\",\n          borderTopWidth: 16,\n          borderTopColor: useColorModeValue(\"white\", \"gray.800\"),\n          pos: \"absolute\",\n          bottom: \"-16px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n        }}\n      >\n        {children}\n      </Stack>\n    );\n  };\n\n  const TestimonialHeading = (props) => {\n    const { children } = props;\n\n    return (\n      <Heading as={\"h3\"} fontSize={\"xl\"}>\n        {children}\n      </Heading>\n    );\n  };\n\n  const TestimonialText = (props) => {\n    const { children } = props;\n\n    return (\n      <Text\n        textAlign={\"center\"}\n        color={useColorModeValue(\"gray.600\", \"gray.400\")}\n        fontSize={\"lg\"}\n      >\n        {children}\n      </Text>\n    );\n  };\n\n  const TestimonialAvatar = ({ icon, name, title }) => {\n    return (\n      <Flex align={\"center\"} mt={8} direction={\"column\"}>\n        <Icon as={icon} fontSize=\"3xl\" mb={2} />\n        <Stack spacing={-1} align={\"center\"}>\n          <Text fontWeight={600}>{name}</Text>\n          <Text\n            fontSize={\"sm\"}\n            color={useColorModeValue(\"gray.600\", \"gray.400\")}\n          >\n            {title}\n          </Text>\n        </Stack>\n      </Flex>\n    );\n  };\n  return (\n    <>\n      <Navbar /> <Elevator />\n      <Container maxW={\"full\"} p={2}>\n        <Stack\n          as={Box}\n          textAlign={\"center\"}\n          spacing={{ base: 8, md: 14 }}\n          py={{ base: 20, md: 36 }}\n        >\n          <CustomHeading\n            text={\"  Трохи про -\"}\n            text2={\" нашу академію!\"}\n            fontWeight={600}\n          />\n\n           {AboutAcdemy}\n        </Stack>\n      </Container>\n      <Box bg={useColorModeValue(\"white\", \"gray.700\")} p={4}>\n        <Container maxW={\"full\"} py={16} as={Stack} spacing={12}>\n          <Stack spacing={0} textAlign={\"center\"}>\n            <CustomHeading\n              text={\"  Що про нас говорять -\"}\n              text2={\"батьки, учні та гості.\"}\n              fontWeight={600}\n            />\n          </Stack>\n          <Flex justify=\"center\" align=\"center\">\n            {\" \"}\n            <SimpleGrid\n              spacing={{ base: 10, md: 4, lg: 10 }}\n              textAlign=\"center\"\n              w={\"3xl\"}\n            >\n              {testimonialsData.map((testimonial, index) => (\n                <Testimonial key={index}>\n                  <TestimonialContent>\n                    <TestimonialHeading>\n                      {testimonial.heading}\n                    </TestimonialHeading>\n                    <TestimonialText>{testimonial.text}</TestimonialText>\n                  </TestimonialContent>\n                  <TestimonialAvatar\n                    icon={FcApproval}\n                    name={testimonial.avatar.name}\n                    title={testimonial.avatar.title}\n                  />\n                </Testimonial>\n              ))}\n            </SimpleGrid>\n          </Flex>\n        </Container>\n      </Box>{\" \"}\n      <SmallCentered />\n    </>\n  );\n};\n\nexport default OurAcademy;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["_ref","text","text2","textFontSize","headingFontSize","textFontWeight","color","headingFontWeight","props","_objectWithoutProperties","_excluded","_jsxs","Heading","_objectSpread","fontWeight","fontSize","base","sm","md","lineHeight","textAlign","textTransform","p","children","_jsx","Text","as","Testimonial","Box","TestimonialContent","Stack","bg","useColorModeValue","boxShadow","rounded","align","pos","_after","content","w","h","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderTopColor","bottom","left","transform","TestimonialHeading","TestimonialText","TestimonialAvatar","icon","name","title","Flex","mt","direction","Icon","mb","spacing","_Fragment","Navbar","Elevator","Container","maxW","py","CustomHeading","AboutAcdemy","justify","SimpleGrid","lg","testimonialsData","map","testimonial","index","heading","FcApproval","avatar","SmallCentered","Grid","forwardRef","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","div","__css","displayName","count","columns","spacingX","spacingY","minChildWidth","theme","useTheme","width","mapResponsive","value","n","_value","getToken","concat","widthToColumns","useStyleConfig","_omitThemingProps","omitThemingProps","className","h2","cx"],"sourceRoot":""}